View(hr)
fit_glm <- glm(left ~ . , data = hr, family = binomial())
summary(fit_glm)
View(hr)
unique(hr$Department)
summary(fit_glm)
View(hr)
hr$salary
hr$salary <- factor(hr$salary, levels=c('low','medium','high'))
hr$salary
fit_glm <- glm(left ~ . , data = hr, family = binomial())
summary(fit_glm)
hr <- read.csv("C:/Training/Academy/Statistics (R)/Cases/human-resources-analytics/HR_comma_sep.csv",
stringsAsFactors = T)
hr$salary
as.integer(hr$salary)
data(CO2)
force(CO2)
str(CO2)
t.test(CO2$uptake ~ CO2$Treatment)
CO2$Treatment
as.integer(CO2$Treatment)
CO2$Treatment <- factor(CO2$Treatment,levels = c('chilled','nonchilled '))
as.integer(CO2$Treatment)
t.test(CO2$uptake ~ CO2$Treatment)
data(CO2)
CO2 <- read.csv("C:/Training/Academy/Statistics (Python)/Datasets/CO2.csv",stringsAsFactors = T)
t.test(CO2$uptake ~ CO2$Treatment)
CO2$Treatment <- factor(CO2$Treatment,levels = c('chilled','nonchilled '))
CO2 <- read.csv("C:/Training/Academy/Statistics (Python)/Datasets/CO2.csv",stringsAsFactors = T)
CO2
CO2$Treatment
CO2$Treatment
t.test(CO2$uptake ~ CO2$Treatment)
CO2$Treatment <- factor(CO2$Treatment,levels = c('nonchilled','chilled '))
t.test(CO2$uptake ~ CO2$Treatment)
CO2 <- read.csv("C:/Training/Academy/Statistics (Python)/Datasets/CO2.csv",stringsAsFactors = T)
CO2$Treatment
t.test(CO2$uptake ~ CO2$Treatment)
CO2$Treatment <- factor(CO2$Treatment,levels = c('nonchilled','chilled'))
t.test(CO2$uptake ~ CO2$Treatment)
as.integer(CO2$Treatment)
f <- 0
p <- 0
f/p
r <- f/p
is.nan(r)
is.na(r)
trt <- c("A","B","C")
block <- c("I","II","III","IV")
exp <- cbind(trt,block)
exp
trt <- c("A","B")
block <- c("I","II","III","IV")
exp <- cbind(trt,block)
exp
a <- array(dim=c(2,5))
a
a[1,4] <- 40
a[2,3] <- 90
a
a = 45
a
45 -> a
a
a <- c(3,5,1,2)
b <- c(5,3,1,0)
df <- data.frame(a,b)
df
data()
data("Theoph")
Theoph$Wt
a <- c(3,5,1,2,8)
b <- c(5,3,1,0)
df <- data.frame(a,b)
a <- c(3,5,1,2,8)
b <- c(5,3,1,0)
df <- data.frame(a,b)
df
x <- c(3,5,1,2,8)
y <- c(5,3,1,0)
df <- data.frame(x,y)
x <- c(3,5,1,2,8)
y <- c(5,3,1,0,7)
df <- data.frame(x,y)
df
data("Theoph")
force(Theoph)
str(Theoph)
dim(Theoph)
colnames(Theoph)
names(Theoph)
View(Theoph)
View(Theoph)
fit_lm <- lm(conc ~ . -Subject, data = Theoph)
fit_lm
class(Theoph)
class(fit_lm)
View(Theoph)
x <- c(3,5,1,2,8)
y <- c(5,3,1,0,7)
df <- data.frame(x,y)
df
class(df)
colnames(fit_lm)
names(fit_lm)
fit_lm$coefficients
fit_lm$fitted.values
names(fit_lm)
fit_lm$coefficients
coef <- fit_lm$coefficients
coef <- data.frame(coefs = fit_lm$coefficients)
View(coef)
names(fit_lm)
df2 <- read.csv("C:/Training/Academy/R Course (C-DAC)/Datasets/Cars93.csv")
str9df2
str(df2)
df2 <- read.csv("C:/Training/Academy/R Course (C-DAC)/Datasets/Cars93.csv",
stringsAsFactors = T)
str(df2)
View(df2)
install.packages("haven")
shiny::runApp('C:/Training/Academy/R Course (C-DAC)/6. Interactive Graphics/Class Examples/Histogram')
shiny::runApp('C:/Training/Academy/R Course (C-DAC)/6. Interactive Graphics/Class Examples/Histogram')
runApp('C:/Training/Academy/R Course (C-DAC)/6. Interactive Graphics/Class Examples/Boxplot')
runApp('C:/Training/Academy/R Course (C-DAC)/6. Interactive Graphics/Class Examples/Boxplot')
runApp('C:/Training/Academy/R Course (C-DAC)/6. Interactive Graphics/Class Examples/Boxplot')
runApp('C:/Training/Academy/R Course (C-DAC)/6. Interactive Graphics/Class Examples/Boxplot')
runApp('C:/Training/Academy/Recordings/R/Histrogram')
runApp('C:/Training/Academy/Recordings/R/Hist')
runApp('C:/Training/Academy/Recordings/R/Hist')
runApp('C:/Training/Academy/R Course (C-DAC)/6. Interactive Graphics/Class Examples/Histogram')
runApp('C:/Training/Academy/Recordings/R/Hist')
runApp('C:/Training/Academy/Recordings/R/Hist')
runApp('C:/Training/Academy/Recordings/R/Hist')
runApp('C:/Training/Academy/Recordings/R/Hist')
runApp('C:/Training/Academy/Recordings/R/Hist')
runApp('C:/Training/Academy/Recordings/R/Hist')
runApp('C:/Training/Academy/Recordings/R/Boxplot')
runApp('C:/Training/Academy/Recordings/R/Boxplot')
subtract <- function(a,b){
ans <- a - b
ans
}
subtract(24,8)
subtract(c(3,5,9),c(9,2,4))
subtract <- function(a,b){
ans <- a - b
ans
}
subtract(34,5)
subtract(c(3,5,9), c(9,2,4))
y <- c(19,23,67,40)
yhat <- c(18.8, 20.8, 60.33, 45.4)
y-yhat
y - yhat
(y - yhat)^2
(y - yhat)**2
mean((y - yhat)**2)
sqrt(mean((y - yhat)**2))
sqrt(mean((y - yhat)**2))
rmse <- function(actual, estimated){
sqrt(mean((actual - estimated)**2))
}
rmse(y, yhat)
install.packages("caret")
rmse("Sanjay", "Music")
rmse(z, yhat)
y <- c(19,23,67,40)
yhat <- c(18.8, 20.8, 60.33, 45.4,6)
rmse(y, yhat)
y <- c(19,23,67,40,NA)
rmse(y, yhat)
rmse <- function(actual, estimated){
sqrt(mean((actual - estimated)**2), na.rm=T)
}
rmse(y, yhat)
rmse <- function(actual, estimated){
sqrt(mean((actual - estimated)**2, na.rm=T))
}
rmse(y, yhat)
input <- c(2,4,5,7,8,9,1)
mu <- mean(input, na.rm=T)
std <- sd(input, na.rm=T)
input
v <- c(mu, std)
v
input <- c(2,4,5,7,8,9,1)
mu <- mean(input, na.rm=T)
std <- sd(input, na.rm=T)
v <- c(mu, std)
v
input <- mtcars$mpg
mu <- mean(input, na.rm=T)
std <- sd(input, na.rm=T)
v <- c(mu, std)
v
mu_sd <- function(input){
mu <- mean(input, na.rm=T)
std <- sd(input, na.rm=T)
v <- c(mu, std)
v
}
mu_sd(mtcars$mpg)
mu_sd <- function(input) {
mu <- mean(input, na.rm=T)
std <- sd(input, na.rm=T)
v <- c(mu, std)
v
}
mu_sd(mtcars$disp)
mu_sd <- function(input) {
mu <- mean(input, na.rm=T)
std <- sd(input, na.rm=T)
v <- list(mu, std)
v
}
mu_sd(mtcars$disp)
class(mu_sd(mtcars$disp))
v <- data.frame(mu, std)
mu_sd <- function(x) {
mu <- mean(x, na.rm=T)
std <- sd(x, na.rm=T)
v <- data.frame(mu, std)
v
}
class(mu_sd(mtcars$disp))
mu_sd(mtcars$disp)
m <- matrix(1:18, 3, 6)
m
mean(m[,3])
colMeans(m)
rowMeans(m)
apply(m, 1, sd)
sd(m[1,])
sd(m[2,])
m <- matrix(c(1,4,5,6,9,2,3,4,5,1,2,3,4,2,3,6,8,1), 3, 6)
m
sd(m[1,])
sd(m[2,])
sd(m[3,])
apply(m, 1, sd)
apply(m, 2, sd)
(sd(input,na.rm=T)/mean(input,na.rm=T))*100
coef_var <- function(input){
(sd(input,na.rm=T)/mean(input,na.rm=T))*100
}
m
apply(m,2,coef_var)
l <- list(a=c(8,2,4,1), b=c(5,4), c=c(4,1,5,8,9,3,5), d=c(4,5,6))
l
mean(l$a)
mean(l$b)
mean(l$c)
mean(l$d)
lapply(l, mean)
lapply(l, sd)
f <- lapply(l, sd)
class(f)
lapply(l, mean)
sapply(l, mean)
descriptive <- function(input) {
df <- c(Mean = mean(input,na.rm = TRUE),
SD = sd(input,na.rm = TRUE))
df
}
descriptive(mtcars$mpg)
descriptive <- function(input) {
obj <- c(Mean = mean(input,na.rm = TRUE),
SD = sd(input,na.rm = TRUE))
obj
}
descriptive(mtcars$mpg)
sapply(mtcars, descriptive)
g <- sapply(mtcars, descriptive)
class(g)
g
l1 <- list(x=c(8,3,4), y=c(6,4))
l2 <- list(p=c(5,4), q=c(5,1,2,3,4))
mapply(c, l1,l2)
mapply(mean, l1,l2)
mapply(sum, l1,l2)
l1 <- list(x=c(8,3,4), y=c(6,4))
l2 <- list(p=c(5,4), q=c(5,1,2,3,4))
mapply(c, l1,l2)
l1 <- list(x=c(8,3,4), y=c(6,4))
l2 <- list(p=c(5,4), q=c(5,1,2,3,4),r=c(3,5,6))
mapply(c, l1,l2)
mapply(sum, l1,l2)
l1 <- list(c(8,3,4), c(6,4))
l2 <- list(c(5,4), c(5,1,2,3,4))
mapply(c, l1,l2)
mapply(sum, l1,l2)
l1 <- list(x=c(8,3,4), y=c(6,4))
l2 <- list(p=c(5,4), q=c(5,1,2,3,4))
mapply(c, l1,l2)
mapply(sum, l1,l2)
mtcars
unique(mtcars$vs)
tapply(mtcars$mpg, mtcars$vs, mean)
tapply(mtcars$mpg, mtcars$vs, sd)
install.packages("mlbench")
library(mlbench)
data("Sonar")
View(Sonar)
lstDist <- list(binomialDist = rbinom(50000, 10000, 0.023),
poissonDist = rpois(45000, 230),
normalDist1 = rnorm(40000, 230,30),
normDist2 = rnorm(40000, 230, 40))
lstDist
lstDist <- list(binomialDist = rbinom(50000, 10000, 0.023),
poissonDist = rpois(45000, 230),
normalDist1 = rnorm(40000, 230,30),
normDist2 = rnorm(40000, 230, 40))
x <- lstDist$binomialDist
x <- lstDist$binomialDist
mu <- mean(x, na.rm=T)
std <- sd(x, na.rm=T)
ll <- mu - 3*std
ul <- mu + 3*std
limits <- c(ll,ul)
limits
climts <- function(x) {
mu <- mean(x, na.rm=T)
std <- sd(x, na.rm=T)
ll <- mu - 3*std
ul <- mu + 3*std
limits <- c(ll,ul)
limits
}
climits(lstDist$binomialDist)
lstDist$binomialDist
climits(lstDist$binomialDist)
climits <- function(x) {
mu <- mean(x, na.rm=T)
std <- sd(x, na.rm=T)
ll <- mu - 3*std
ul <- mu + 3*std
limits <- c(ll,ul)
limits
}
climits(lstDist$binomialDist)
mu <- mean(x, na.rm=T)
std <- sd(x, na.rm=T)
ll <- mu - 3*std
ul <- mu + 3*std
limits <- c(ll,ul)
limits
lapply(lstDist, climits)
str_dt <- "1994-10-04"
class(str_dt)
dt <- as.Date(str_dt)
class(dt)
dt
unclass(dt)
str_dt <- "1970-01-01"
class(str_dt)
dt <- as.Date(str_dt)
class(dt)
dt
unclass(dt)
str_dt <- "1970-01-02"
class(str_dt)
dt <- as.Date(str_dt)
class(dt)
dt
unclass(dt)
dt1 <- as.Date("2022-09-22")
dt2 <- as.Date("2021-10-03")
dt1-dt2
str_dt <- "1970-01-02"
class(str_dt)
dt <- as.Date(str_dt)
class(dt)
dt
unclass(dt)
dt1+7
dt1-dt2
f <- as.integer(dt1-dt2)
dt1+7
f
f <- dt1-dt2
f
class(f)
ft <- "15-Sep-2022"
as.Date(ft)
as.Date(ft,format = "%d-%b-%Y")
dt1
# 22, September 2022
format(dt1, "%d, %B %Y")
format(dt1,"%B")
format(dt1,"%m")
seq(dt1,length=10,by='week')
h <- "15-09-2022 09:35:14"
th <- strptime(h,"%d-%m-%Y %H:%M:%S")
th
class(th)
unclass(th)
th <- as.POSIXct(th)
unclass(th)
h <- "01-01-1970 00:00:00"
th <- strptime(h,"%d-%m-%Y %H:%M:%S")
th
th <- as.POSIXct(th)
unclass(th)
h <- "01-01-1970 00:00:01"
th <- strptime(h,"%d-%m-%Y %H:%M:%S")
th <- as.POSIXct(th)
unclass(th)
19800/60
19800/360
h <- "30-11-1970 00:00:00"
th <- strptime(h,"%d-%m-%Y %H:%M:%S")
th <- as.POSIXct(th)
unclass(th)
h <- "30-11-1969 00:00:00"
th <- strptime(h,"%d-%m-%Y %H:%M:%S")
th <- as.POSIXct(th)
unclass(th)
h <- "01-11-1970 00:10:00"
th <- strptime(h,"%d-%m-%Y %H:%M:%S")
th <- as.POSIXct(th)
unclass(th)
h <- "01-01-1970 00:00:00"
th <- strptime(h,"%d-%m-%Y %H:%M:%S")
th <- as.POSIXct(th)
unclass(th)
h <- "01-02-1970 00:00:00"
th <- strptime(h,"%d-%m-%Y %H:%M:%S")
th <- as.POSIXct(th)
unclass(th)
h <- "01-01-1970 00:01:00"
th <- strptime(h,"%d-%m-%Y %H:%M:%S")
th <- as.POSIXct(th)
unclass(th)
h <- "01-01-1970 00:20:00"
th <- strptime(h,"%d-%m-%Y %H:%M:%S")
th <- as.POSIXct(th)
unclass(th)
h <- "01-01-1970 01:00:00"
th <- strptime(h,"%d-%m-%Y %H:%M:%S")
th <- as.POSIXct(th)
unclass(th)
h <- "01-01-1970 10:00:00"
th <- strptime(h,"%d-%m-%Y %H:%M:%S")
th <- as.POSIXct(th)
unclass(th)
h <- "01-01-1970 05:00:00"
th <- strptime(h,"%d-%m-%Y %H:%M:%S")
th <- as.POSIXct(th)
unclass(th)
1800/360
h <- "01-01-1970 05:05:00"
th <- strptime(h,"%d-%m-%Y %H:%M:%S")
th <- as.POSIXct(th)
unclass(th)
h <- "01-01-1970 05:15:00"
th <- strptime(h,"%d-%m-%Y %H:%M:%S")
th <- as.POSIXct(th)
unclass(th)
h <- "01-01-1970 06:00:00"
th <- strptime(h,"%d-%m-%Y %H:%M:%S")
th <- as.POSIXct(th)
unclass(th)
1800/360
h <- "01-01-1970 05:55:00"
th <- strptime(h,"%d-%m-%Y %H:%M:%S")
th <- as.POSIXct(th)
unclass(th)
h <- "01-01-1970 06:00:00"
th <- strptime(h,"%d-%m-%Y %H:%M:%S")
th <- as.POSIXct(th)
unclass(th)
1800/3600
h <- "01-01-1970 05:30:00"
th <- strptime(h,"%d-%m-%Y %H:%M:%S")
th <- as.POSIXct(th)
unclass(th)
setwd("C:/Training/Academy/Statistics (Python)/Datasets/")
library(tidyverse)
quality <- read.csv("quality.csv", stringsAsFactors = T)
View(quality)
qual_long <- quality %>%
pivot_longer(-c(Sno), names_to = "category", values_to = "val")
View(quality)
View(qual_long)
quality2 <- read.csv("quality2.csv", stringsAsFactors = T)
View(quality2)
qual2_long <- quality2 %>%
pivot_longer(-c(Id, Group), names_to = "category", values_to = "val")
View(qual2_long)
library(tidyr)
quality <- read.csv("quality.csv",stringsAsFactors = T)
View(quality)
quality
quality
qual_long <- quality %>%
pivot_longer(-c(Sno), names_to = "category",
values_to = "val")
View(qual_long)
quality2 <- read.csv("quality2.csv", stringsAsFactors = T)
View(quality2)
quality2
quality2
qual2_long <- quality2 %>%
pivot_longer(-c(Id, Group), names_to = "category",
values_to = "val")
View(qual2_long)
qual2_long
qual_wide <- qual2_long %>%
pivot_wider(names_from = "category", values_from = "val")
View(qual_wide)
