df[,2,drop=F]
df[,,drop=F]
df[,,drop=F]
df[,,drop=F]
df
df<-chickwts
df
df
s <- "1970-01-05"
class(s)
s <- "1970-01-05"
class(s)
dd <- as.Date(s)
dd
format(dd, "%d-%m-%Y")
data()
install.packages("tidyverse")
install.packages("tibble")
install.packages("tibble")
library(tibble)
dd <- as_tibble(mtcars)
class(dd)
dd
install.packages("tibble")
library(tibble)
dd <- as_tibble(mtcars)
class(dd)
dd
install.packages("tibble")
install.packages("tibble")
library(tibble)
dd <- as_tibble(mtcars)
class(dd)
dd
library(tibble)
dd <- as_tibble(mtcars)
class(dd)
dd
?tidyr
install.packages("tidyr")
library(tidyr)
table4a
gather(table4a,"1999","2000",key="Year",value="Cases")
gather(table4a,"1999","2000",key="Year",value="Population")
gather(table4a,"1999","2000",key="Year",value="Cases",convert=T)
gather(table4a,"1999","2000",key="Year",value="Cases",convert=F)
gather(table4a,"1999","2000",key="Year",value="Cases",convert=FALSE)
gather(table4a,"1999","2000",key="Year",value="Cases",convert=FALSE,factor_key = TRUE)
spred(table2,key="type",value="count")
spread(table2,key="type",value="count")
separate(table3,"rate",into=c("cases","population"),sep="/",convert=T)
table3
separate(table3,"year",into=c("cent","year"),sep=2,convert=T)
table5
unite(table5,"new-yr","century","year",sep = "")
unite(table5,"new-yr","century","year",sep = "-")
unite(table5,"new-yr","century","year",sep = "  ")
table2
separate(table3,"year",into=c("cent","year"),sep=2,convert=T)
unite(table5,"new-yr","century","year",sep = "  ")
unite(table5,"new-yr","century","year",sep = 2)
unite(table5,"new-yr","century","year",sep = 2)
unite(table5,"new-yr","century","year",sep = 2,convert=T)
unite(table5,"new-yr","century","year")
unite(table5,"new-yr","century","year",sep="")
table5
data.frame()
data_frame
tidy_dataframe
data.frame(
S.No = c(1:n),
Group.1 = c(23, 345, 76, 212, 88,
199, 72, 35, 90, 265),
Group.2 = c(117, 89, 66, 334, 90,
101, 178, 233, 45, 200),
Group.3 = c(29, 101, 239, 289, 176,
320, 89, 109, 199, 56))
data.frame(
S.No = c(1:n),
Group.1 = c(23, 345, 76, 212, 88,
199, 72, 35, 90, 265),
Group.2 = c(117, 89, 66, 334, 90,
101, 178, 233, 45, 200),
Group.3 = c(29, 101, 239, 289, 176,
320, 89, 109, 199, 56))
tidy_dataframe=
data.frame(
S.No = c(1:n),
Group.1 = c(23, 345, 76, 212, 88,
199, 72, 35, 90, 265),
Group.2 = c(117, 89, 66, 334, 90,
101, 178, 233, 45, 200),
Group.3 = c(29, 101, 239, 289, 176,
320, 89, 109, 199, 56))
n=10
tidy_dataframe=
data.frame(
S.No = c(1:n),
Group.1 = c(23, 345, 76, 212, 88,
199, 72, 35, 90, 265),
Group.2 = c(117, 89, 66, 334, 90,
101, 178, 233, 45, 200),
Group.3 = c(29, 101, 239, 289, 176,
320, 89, 109, 199, 56))
tidy_dataframe
library(tidyverse)
tidy.dataframe
tidy_dataframe
v<-c1:5
v<-c(1:5)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
ggplot(data = mtcars, aes(x=wt, y=mpg)) +
geom_point() +
labs(x="Weight",y="MPG",title = "Scatter Plot")
ggplot(data = Salaries, aes(x=yrs.service,y=salary)) +
geom_point() +
labs(x="Years in Service",y="Salary",title = "Scatter Plot")
Salaries <- read.csv("Salaries.csv",stringsAsFactors = T)
Salaries <- read.csv("C:\\R Programming\\Day 4\\Salaries.csv",stringsAsFactors = T)
data("mtcars")
survey <- read.csv("survey.csv",stringsAsFactors = T)
Salaries <- read.csv("C:\\R Programming\\Day 4\\Salaries.csv",stringsAsFactors = T)
data("mtcars")
ggplot(data = Salaries, aes(x=yrs.service,y=salary)) +
geom_point() +
Salaries <- read.csv("C:\\R Programming\\Day 4\\Salaries.csv",stringsAsFactors = T)
gather(table4a,"1999","2000",key="Year",value="Cases",convert = T,factor_key=F)
table2 %>%
spread(key="type",value = "count")
table2 %>%
spread(key="type",value = "population")
table2
table2 %>%
spread(key="type",value = "type")
n=10
tidy_dataframe=
data.frame(
S.No = c(1:n),
Group.1 = c(23, 345, 76, 212, 88,
199, 72, 35, 90, 265),
Group.2 = c(117, 89, 66, 334, 90,
101, 178, 233, 45, 200),
Group.3 = c(29, 101, 239, 289, 176,
320, 89, 109, 199, 56))
tidy_dataframe
library(tidyverse)
tidy_dataframe
library(tidyverse)
table4a
gather(table4a,"1999","2000",key="Year",value="Cases")
gather(table4a,"1999","2000",key="Year",value="Cases",convert = T)
gather(table4a,"1999","2000",key="Year",value="Cases",convert = T,factor_key=F)
table2
spread(table2,key="type",value = "count")
table2 %>%
spread(key="type",value = "type")
knitr::opts_chunk$set(echo = TRUE)
v<- c(1,2,3)
v
v
`
v
`
v
`
v
`
v
`
v2<-c('a','b'
v
``
``
v1<- c(1,2,3)
v2<-c('a','b','c','d')
v1
v1<- c(1,2,3)
v2<-c('a','b','c','d')
v2
```
```{r}
```{r}
```
```
v2<-c('a','b'
```
```
```
```
```{r}
v1<- c(1,2,3)
v2<-c('a','b','c','d')
v1
v1<- c(1,2,3)
v2<-c('a','b','c','d')
v1
v2
```{r}
```{r}
```{r}
```{r}
```{r}
```{r}
class(v1)
}
```{r}
class(v1)
v1
v1<- c(1,2,3)
v2<-c('a','b','c','d')
v3<-c(T,F,F,F,T,T)
v4<-C(2.3,4.5,4.6,5.6,7.7)
v1<- c(1,2,3)
v2<-c('a','b','c','d')
v3<-c(T,F,F,F,T,T)
v4<-c(2.3,4.5,4.6,5.6,7.7)
class(v1) # gives type
class(v2)
class(v3)
class(v4)
v1<- c(1L,2L,3L)
v2<-c('a','b','c','d')
v3<-c(T,F,F,F,T,T)
v4<-c(2.3,4.5,4.6,5.6,7.7)
class(v1) # gives type
class(v2)
class(v3)
class(v4)
class(v5)
v5<-c(3+2i, 4+4j, 2+3k, 5+6l)
v5<-c(3+2i, 4+4i, 2+3i, 5+6i)
class(v5)
v6<-(1,2,'C') # makes all string
v6<-c(1,2,'C') # makes all string
class(v6)
class(v7)
v7<-1:5
class(v7)
class(v7)
v7
v8<-seq(1,10,2)
v8
v9<-rep(1:2, times=3)
v7<-1:5
v7
v8<-seq(1,10,2)
v8
v9<-rep(1:2, times=3)
v9
```
v1<- c(1L,2L,3L) #integer
v2<- c('a','b','c','d') #character
v3<- c(T,F,F,F,T,T) #logical
v4<- c(2.3,4.5,4.6,5.6,7.7) #numeric
v5<- c(3+2i, 4+4i, 2+3i, 5+6i) #imaginary
v6<- c(1,2,'C') # makes all string
class(v1)
class(v2)
class(v3)
class(v4)
class(v5)
class(v6)
v7<-1:5
v7
v8<-seq(1,10,2)
v8
v9<-rep(1:2, times=3)
v9
lst <- list(1,2.5, "Riya", TRUE)
lst
lst1 <- list(1, 3.5, c(1,2,3,4,5), F)
lst1
lst <- list(1,2.5, "Riya", TRUE)
lst
lst1 <- list(1, 3.5, c(1,2,3,4,5), F)
lst1[3][4]
```
lst <- list(1,2.5, "Riya", TRUE)
lst
lst1 <- list(1, 3.5, c(1,2,3,4,5), F)
lst1[3][4]
```
lst1 <- list(1, 3.5, c(1,2,3,4,5), F)
lst1[3][4]
lst1 <- list(1, 3.5, c(1,2,3,4,5), F)
lst1[3][4]
lst <- list(1,2.5, "Riya", TRUE)
lst
lst1 <- list(1, 3.5, c(1,2,3,4,5), F)
lst1[3]
```
lst <- list(1,2.5, "Riya", TRUE)
lst
lst1 <- list(1, 3.5, c(1,2,3,4,5), F)
lst1[3][2]
```
lst1[3][2]
lst1[3][3]
lst<-list(a=1,b=3.5,c=TRUE,d=c(12,34))
lst
lst$d[2]
lst[4][1,2]
lst<-list(a=1,b=3.5,c=TRUE,d=c(12,34))
lst
lst$d[2]
lst[4][1]
lst1 <- list(1, 3.5, c(1,2,3,4,5), F)
lst1[3][1]
lst1 <- list(1, 3.5, c(1,2,3,4,5), F)
lst1[3][2]
lst1 <- list(1, 3.5, c(1,2,3,4,5), F)
lst1[3](2)
lst1 <- list(1, 3.5, c(1,2,3,4,5), F)
lst1$3[3]
lst1 <- list(a= 1, b= 3.5, c= c(1,2,3,4,5), d= F)
lst1$c[4]
lst1 <- list(1, 3.5, c(1,2,3,4,5), F)
lst1[3][4]
lst1[3][[4]]
lst1[[3][4]]
lst1[[3][4]
lst1[3][4]
lst1[3][1]
v<-c('m','f','m','f','m','f','f','f')
f<-factor(v)
f
m<- matrix(10,20,30)
m
m<-matrix(2,2,2)
m
a<-1:5
a
b<-6:10
b
c<-11:15
c
rbind(a,b,c)
cbind(a,b,c)
a1<-array(a,dim=(2,2,1))
a1<-array(a,dim=c(2,2,1))
a1
df<-dataframe(a,b,c)
df<-data.frame(a,b,c)
df
read.csv("C:\R Programming\Day 4\survey.csv")
df1<-read.csv("C:\\R Programming\\Day 4\\survey.csv")
df1
df[smoke]
df['smoke']
df['Smoke']
df1['Smoke']
countSMoke<-function(s)
{}
countSMoke<-function(s)
{for 'Never' in s{} }
countSMoke<-function(s)
{ for('Smoke' in s){}}
countSMoke<-function(s)
{ cnt = 0 for('Smoke' in s){ cnt=cnt+1} return cnt}
df1<-read.csv("C:\\R Programming\\Day 4\\survey.csv")
countSMoke<-function(s, n){
cnt = 0
for(n in s){
cnt=cnt+1
}return(cnt)
for(i in 1:5){}
for(i in 1:5){for(n in 6:10){print (i,n)}}
for(i in 1:5){for(n in 6:10){print (i) print(n)}}
for(i in 1:5){
for(n in 6:10){
print (i)
print(n)}
}
dt1<-as.Date("1970-01-01")
dt1
class(dt1)
unclass(dt1)
dt1
dt2<-as.Date("2022-11-12")
dt2
unclass(dt2)
Sys.Date()
df1
dft<-as.tibble(df1)
dft<-as_tibble(df1)
dft
arrange(dft,Age)
arrange(dft,desc (Age))
select(dft,Sex)
filter(dft, Smoke=="Never")
filter(dft, Age>60)
df_age<-filter(dft, Age>60)
df_senior<-mutate(df_age, Senior=T)
df_senior
setwd('C:/Adv Analytics/Datasets/')
pg = read.csv('PlantGrowth.csv')
pg$weight
(mean(pg$weight) - 6/(sd(pg$weight)/sqrt(29)))
(mean(pg$weight) - 6/(sd(pg$weight)/sqrt(30)))
mean(pg$weight) - 6/(sd(pg$weight)/sqrt(30))
mean(pg$weight) - 6/(sd(pg$weight)
((mean(pg$weight)-6)/(sd(pg$weight)sqrt(30))
((mean(pg$weight)-6)/(sd(pg$weight)sqrt(30)))
(mean(pg$weight)-6)/(sd(pg$weight)sqrt(30))
(mean(pg$weight)-6)/(sd(pg$weight)/sqrt(30))
t.test(pg$weight, mu=6, alternative = 't')
t.test(pg$weight, mu=5, alternative = 't')
t.test(pg$weight, mu=4.8, alternative = 't')
t.test(pg$weight, mu=4, alternative = 't')
t.test(pg$weight, mu=10, alternative = 't')
t.test(pg$weight, mu=8, alternative = 't')
t.test(pg$weight, mu=7, alternative = 't')
t.test(pg$weight, mu=7.5, alternative = 't')
t.test(pg$weight, mu=6.5, alternative = 't')
t.test(pg$weight, mu=5.5, alternative = 't')
t.test(pg$weight, mu=5.3, alternative = 't')
t.test(pg$weight, mu=5.4, alternative = 't')
t.test(pg$weight, mu=5.3, alternative = 't')
t.test(pg$weight, mu=5.2, alternative = 't')
t.test(pg$weight, mu=5.1, alternative = 't')
t.test(pg$weight, mu=5, alternative = 't')
t.test(pg$weight, mu=4.9, alternative = 't')
t.test(pg$weight, mu=4.8, alternative = 't')
t.test(pg$weight, mu=6, alternative = 'g')
t.test(pg$weight, mu=6, alternative = 'l')
t.test(co$uptake, mu=6, alternative = 'l')
co = read.csv('CO2.csv')
t.test(co$uptake, mu=6, alternative = 'l')
t.test(co$uptake, mu=30, alternative = 'l')
indo = read.csv('Indometh.csv')
indo
t.test(indo$conc, mu=0.30, alternative = 'g')
t.test(indo$conc, mu=0.30, alternative = 't')
t.test(indo$conc, mu=0.30, alternative = 'l')
t.test(indo$conc, mu=0.30, alternative = 'g')
cont = subset(ano, Treat=="Cont")
ano = read.csv('anorexia.csv')
cont = subset(ano, Treat=="Cont")
cont
t.test(cont$Prewt, cont$Postwt, mu =0, paired = T, alternative = "l")
cbt = subset(ano, Treat=="CBT")
t.test(cbt$Prewt, cbt$Postwt, mu =0, paired = T, alternative = "l")
ft = subset(ano, Treat=="FT")
t.test(ft$Prewt, ft$Postwt, mu =0, paired = T, alternative = "l")
View(ano)
View(ano)
rhu = read.csv('Rheumatic.csv')
t.test(rhu$Before, rhu$After, paired = T, alternative = 'l')
p1 <- subset(plaque, product='P1')
plaque <- read.csv('Plaque.csv')
p1 <- subset(plaque, product='P1')
p1
p1 <- subset(plaque, product="P1")
p1
p1 <- subset(plaque, product=="P1")
p1
p2 <- subset(plaque, product=="P2")
p3 <- subset(plaque, product=="P3")
library(tidyr)
plaque_pivot<-pivot_wider(plaque, id_cols = c("Id", "product"), names_from = "trt", values_from = "score")
View(plaque_pivot)
View(plaque_pivot)
View(plaque)
View(plaque)
p1 <- subset(plaque_pivot, product = "P1")
p2 <- subset(plaque_pivot, product = "P2")
p3 <- subset(plaque_pivot, product = "P3")
t.test(p1$Before, p1$After, paired = T, alternative = 'g')
t.test(p1$Before, p2$After, paired = T, alternative = 'g')
t.test(p1$Before, p3$After, paired = T, alternative = 'g')
t.test(p2$Before, p2$After, paired = T, alternative = 'g')
t.test(p3$Before, p3$After, paired = T, alternative = 'g')
t.test(p3$Before, p3$After, paired = T, alternative = 'g')
t.test(p2$Before, p2$After, paired = T, alternative = 'g')
plaque_pivot<-pivot_wider(plaque, id_cols = c("Id", "product"), names_from = "trt", values_from = "score")
p1 <- subset(plaque_pivot, product = "P1")
p2 <- subset(plaque_pivot, product = "P2")
p3 <- subset(plaque_pivot, product = "P3")
t.test(p1$Before, p1$After, paired = T, alternative = 'g')
t.test(p2$Before, p2$After, paired = T, alternative = 'g')
t.test(p3$Before, p3$After, paired = T, alternative = 'g')
View(plaque)
View(plaque)
View(plaque_pivot)
View(plaque_pivot)
plaque <- read.csv('Plaque.csv')
library(tidyr)
plaque_pivot<-pivot_wider(plaque, id_cols = c("Id", "product"), names_from = "trt", values_from = "score")
p1 <- subset(plaque_pivot, product = "P1")
p2 <- subset(plaque_pivot, product = "P2")
p3 <- subset(plaque_pivot, product = "P3")
t.test(p1$Before, p1$After, paired = T, alternative = 'g')
t.test(p2$Before, p2$After, paired = T, alternative = 'g')
t.test(p3$Before, p3$After, paired = T, alternative = 'g')
library(tidyr)
plaque_pivot<-pivot_wider(plaque, id_cols = c("Id", "product"), names_from = "trt", values_from = "score")
p1 <- subset(plaque_pivot, product =="P1")
p2 <- subset(plaque_pivot, product =="P2")
p3 <- subset(plaque_pivot, product =="P3")
t.test(p1$Before, p1$After, paired = T, alternative = 'g')
t.test(p2$Before, p2$After, paired = T, alternative = 'g')
t.test(p3$Before, p3$After, paired = T, alternative = 'g')
bartlett.test(co2$uptake ~ co2$Treatment)
setwd("C:/Adv Analytics/Datasets/")
co2 <- read.csv("CO2.csv")
bartlett.test(co2$uptake ~ co2$Treatment)
View(co2)
View(co2)
View(co2)
View(co2)
